{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null,\n  card: []\n};\nconst dataSlice = createSlice({\n  name: \"data\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state, action) => {\n      localStorage.removeItem(\"user\");\n      state.user = null;\n    },\n    addCard: (state, action) => {\n      state.card.push(action.payload);\n    },\n    setCard: (state, action) => {\n      state.card = action.payload;\n    },\n    likeCard: state\n  },\n  extraReducers: builder => {\n    // Disable resetting the state to initial state\n    builder.addMatcher(action => action.type.startsWith('redux/reset'), state => state);\n  }\n});\nexport const {\n  addCard,\n  login,\n  logout,\n  setCard\n} = dataSlice.actions;\nexport default dataSlice.reducer;\n\n// thunk\nexport function fetchCard() {\n  return async function fetchCardThunk(dispatch, getState) {\n    const prop = getState();\n    console.log(prop.reducer.user.user._id);\n    await axios.get(`http://localhost:5000/post/getallpost/${prop.reducer.user.user._id}`).then(res => {\n      dispatch(setCard(res.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n}","map":{"version":3,"names":["createSlice","axios","initialState","user","localStorage","getItem","JSON","parse","card","dataSlice","name","reducers","login","state","action","payload","logout","removeItem","addCard","push","setCard","likeCard","extraReducers","builder","addMatcher","type","startsWith","actions","reducer","fetchCard","fetchCardThunk","dispatch","getState","prop","console","log","_id","get","then","res","data","catch","error"],"sources":["T:/MERN2/mern normal crud app/client/src/redux.js/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst initialState = {\r\n    user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null,\r\n    card: []\r\n}\r\n\r\nconst dataSlice = createSlice({\r\n    name: \"data\",\r\n    initialState,\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload\r\n        },\r\n        logout: (state, action) => {\r\n            localStorage.removeItem(\"user\")\r\n            state.user = null;\r\n        },\r\n        addCard: (state, action) => {\r\n            state.card.push(action.payload)\r\n        },\r\n        setCard:(state,action)=>{\r\n            state.card=action.payload\r\n        },\r\n        likeCard:(state)\r\n        \r\n    },\r\n    extraReducers: (builder) => {\r\n        // Disable resetting the state to initial state\r\n        builder\r\n            .addMatcher(\r\n                (action) => action.type.startsWith('redux/reset'),\r\n                (state) => state\r\n            );\r\n    },\r\n})\r\n\r\nexport const { addCard, login, logout,setCard } = dataSlice.actions;\r\nexport default dataSlice.reducer\r\n\r\n\r\n\r\n// thunk\r\nexport function fetchCard() {\r\n    return async function fetchCardThunk(dispatch,getState) {\r\n        const prop=getState();\r\n        console.log(prop.reducer.user.user._id)\r\n        await axios.get(`http://localhost:5000/post/getallpost/${prop.reducer.user.user._id}`).then((res) => {\r\n            dispatch(setCard(res.data))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI;EACpFG,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAGT,WAAW,CAAC;EAC1BU,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACNC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtBD,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,MAAM,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACvBV,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;MAC/BJ,KAAK,CAACV,IAAI,GAAG,IAAI;IACrB,CAAC;IACDe,OAAO,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACL,IAAI,CAACW,IAAI,CAACL,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IACDK,OAAO,EAACA,CAACP,KAAK,EAACC,MAAM,KAAG;MACpBD,KAAK,CAACL,IAAI,GAACM,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDM,QAAQ,EAAER;EAEd,CAAC;EACDS,aAAa,EAAGC,OAAO,IAAK;IACxB;IACAA,OAAO,CACFC,UAAU,CACNV,MAAM,IAAKA,MAAM,CAACW,IAAI,CAACC,UAAU,CAAC,aAAa,CAAC,EAChDb,KAAK,IAAKA,KACf,CAAC;EACT;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,OAAO;EAAEN,KAAK;EAAEI,MAAM;EAACI;AAAQ,CAAC,GAAGX,SAAS,CAACkB,OAAO;AACnE,eAAelB,SAAS,CAACmB,OAAO;;AAIhC;AACA,OAAO,SAASC,SAASA,CAAA,EAAG;EACxB,OAAO,eAAeC,cAAcA,CAACC,QAAQ,EAACC,QAAQ,EAAE;IACpD,MAAMC,IAAI,GAACD,QAAQ,CAAC,CAAC;IACrBE,OAAO,CAACC,GAAG,CAACF,IAAI,CAACL,OAAO,CAACzB,IAAI,CAACA,IAAI,CAACiC,GAAG,CAAC;IACvC,MAAMnC,KAAK,CAACoC,GAAG,CAAE,yCAAwCJ,IAAI,CAACL,OAAO,CAACzB,IAAI,CAACA,IAAI,CAACiC,GAAI,EAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACjGR,QAAQ,CAACX,OAAO,CAACmB,GAAG,CAACC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAChBR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}